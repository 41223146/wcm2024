<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統 - w3</title><link href="./" rel="alternate"></link><link href="./feeds/w3.atom.xml" rel="self"></link><id>./</id><updated>2024-06-14T02:54:47+08:00</updated><entry><title>2024 W3上課內容</title><link href="./2024-Spring-w4-blog-tutorial.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-06-14T02:54:47+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./2024-Spring-w4-blog-tutorial.html</id><summary type="html">&lt;p&gt;w3網際內容管理課上課內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;w3網際內容管理課上課內容&lt;/p&gt;


&lt;h1&gt;git 指令&lt;/h1&gt;
&lt;p&gt;git 的新增、提交與推送指令:&lt;/p&gt;
&lt;p&gt;git add . git commit -m "說明字串" git push&lt;/p&gt;
&lt;p&gt;使用 git add . 表示要認列所進行的全部改版內容, git commit -m 執行之前, 若在近端使用, 必須先行設定 git config, 將 home_ipv6 目錄下的 .gitconfig 中明確列出改版者的身分, 其中包括:&lt;/p&gt;
&lt;p&gt;git config --global user.name "提交者的 github 帳號名稱"&lt;/p&gt;
&lt;p&gt;git config --global user.email "提交者在 github 所登錄的 email address"&lt;/p&gt;
&lt;p&gt;使用者也可以利用 git version 查詢目前所使用的 git 版本.&lt;/p&gt;
&lt;p&gt;git status 通常用來查核目前近端的改版狀況, 例如: 是否與遠端倉儲同步, 或者遠端倉儲已經有了新版本.&lt;/p&gt;
&lt;p&gt;若遠端倉儲已經有新的版本, 則在 git push 之前, 必須設法取下遠端資料進行合併後, 才能再提交新的版本並推送到遠端.&lt;/p&gt;
&lt;p&gt;git pull = git fetch + git merge&lt;/p&gt;
&lt;p&gt;由於要將各組員的 wcm2024 設定為各分組倉儲的子模組, 因此必須利用 git submodule add 以各組員的學號作為子目錄名稱, 利用下列指令, 將組員倉儲新增為分組倉儲的子模組:&lt;/p&gt;
&lt;p&gt;git submodule add 倉儲網址 子目錄&lt;/p&gt;
&lt;p&gt;若只要取下倉儲的主要內容, 可以使用下列指令:&lt;/p&gt;
&lt;p&gt;git clone 倉儲網址_協定.git 指定目錄與否&lt;/p&gt;
&lt;p&gt;若要取下帶有子模組的倉儲, 且可能該子模組還有設定其他子模組, 則必須要加上 --recurse-submodules: git log (檢視 Git 紀錄 Q鍵離開)&lt;/p&gt;
&lt;p&gt;ls -l (瀏覽)&lt;/p&gt;
&lt;p&gt;pwd (列出現在工作目錄)&lt;/p&gt;
&lt;p&gt;acp ("輸入" 直接上傳)&lt;/p&gt;
&lt;p&gt;dns (將英文名稱轉為數字IP 問server(伺服器)IP地址 DNS會先查詢自己資料庫)&lt;/p&gt;
&lt;p&gt;dir (顯示某個磁碟指定目錄下的全部或部分檔案目錄和子目錄)&lt;/p&gt;
&lt;p&gt;./b(代表執行、運行)(執行可執行檔)&lt;/p&gt;
&lt;h1&gt;利用Gitpod維護倉儲&lt;/h1&gt;
&lt;p&gt;https://www.gitpod.io/ - gitpod的使用與 Codespaces 類似,每個月有 50 小時的免費使用時間, 可以使用 Github 帳號登入&lt;/p&gt;
&lt;h1&gt;利用 localhost 維護倉儲&lt;/h1&gt;
&lt;p&gt;透過 Windows 環境中的 USB 隨身碟, 配置可攜程式系統, 用來管理個人與分組的分組倉儲與網站, 可使用老師給的portable_2024.7z(密碼為:kmolab)&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫"></category></entry></feed>